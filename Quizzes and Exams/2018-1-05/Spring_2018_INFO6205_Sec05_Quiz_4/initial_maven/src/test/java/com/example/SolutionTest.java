package com.example;

import org.junit.Test;

import static org.junit.Assert.*;

public class SolutionTest {
    //Do not edit this file, the correct file is under main.
    Solution solution;
    int[][] test1 = {{0,1},{0,2},{0,3},{1,4}};
    int[][] test2 = {{0,1},{1,2},{2,3},{1,3},{1,4}};
    int[][] test3 = {{0,1},{0,2},{1,3}};
    int[][] test4 = {};
    int[][] test5 = {{0,1}};
    @Test public void test0(){
        solution = new Solution();
        solution.validTree(5,test1);
        assertEquals(solution.union.isConnected(0,1),true);
        assertEquals(solution.union.isConnected(2,4),true);
        assertEquals(solution.union.isConnected(0,4),true);
    }
    @Test public void test1(){
        solution = new Solution();
        Boolean valid =solution.validTree(5,test1);
        assertEquals(valid,true);
    }
    @Test public void test2(){
        solution = new Solution();
        solution.validTree(5,test2);
        assertEquals(solution.union.isConnected(0,1),true);
        assertEquals(solution.union.isConnected(2,4),true);
        assertEquals(solution.union.isConnected(3,4),true);
    }
    @Test public void test3(){
        solution = new Solution();
        Boolean valid = solution.validTree(5,test2);
        assertEquals(valid, false);
    }
    @Test public void test4(){
        solution = new Solution();
        solution.validTree(5,test3);
        assertEquals(solution.union.isConnected(0,1),true);
        assertEquals(solution.union.isConnected(3,4),false);
        assertEquals(solution.union.isConnected(2,4),false);
        assertEquals(solution.union.isConnected(2,3),true);
    }
    @Test public void test5(){
        solution = new Solution();
        Boolean valid = solution.validTree(5,test3);
        assertEquals(valid, false);
    }
    @Test public void test6(){
        solution = new Solution();
        solution.validTree(1,test4);
        assertEquals(solution.union.isConnected(0,0),true);
    }
    @Test public void test7(){
        solution = new Solution();
        Boolean valid = solution.validTree(1,test4);
        assertEquals(valid,true);
    }
    @Test public void test8(){
        solution = new Solution();
        solution.validTree(2,test5);
        assertEquals(solution.union.isConnected(0,1),true);
    }
    @Test public void test9(){
        solution = new Solution();
        Boolean valid = solution.validTree(2,test5);
        assertEquals(valid,true);
    }
}
